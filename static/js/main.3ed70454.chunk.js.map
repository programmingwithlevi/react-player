{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","util.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","isPlaying","setIsPlaying","songs","setCurrentSong","audioRef","useRef","playSongHandler","current","pause","play","timeUpdateHandler","e","target","currentTime","duration","setSongInfo","songInfo","getTime","time","Math","floor","slice","skipTrackHandler","direction","currentIndex","findIndex","song","id","length","useState","trackAnim","transform","animationPercentage","className","style","background","color","min","max","value","onChange","type","onClick","size","icon","IoIosArrowBack","FaPause","FaPlay","IoIosArrowForward","onLoadedData","onTimeUpdate","onLoadedMetadata","ref","src","audio","Song","alt","name","cover","artist","LibrarySong","setSongs","selectedSong","filter","state","map","active","Library","libraryStatus","Nav","setLibraryStatus","class","FaMusic","chillHop","uuidv4","App","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ed70454.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { FaPlay } from 'react-icons/fa';\nimport { FaPause } from 'react-icons/fa';\nimport { IoIosArrowForward } from 'react-icons/io';\nimport { IoIosArrowBack } from 'react-icons/io';\n\nconst Player = ({ currentSong, isPlaying, setIsPlaying,songs,setCurrentSong }) => {\n    //ref\n    const audioRef = useRef(null);\n    //Event handlers\n    const playSongHandler = () => {\n        if (isPlaying) {\n            audioRef.current.pause();\n            setIsPlaying(!isPlaying);\n        } else {\n            audioRef.current.play();\n            setIsPlaying(!isPlaying);\n        }\n    };\n    const timeUpdateHandler = (e) => {\n        const current = e.target.currentTime;\n        const duration = e.target.duration;\n        setSongInfo({...songInfo, currentTime: current, duration: duration });\n    };\n//student comment\nconst autoPlayHandler = () => {\n    if (isPlaying) {\n        audioRef.current.play();\n    }\n}\n//end student comment\n    const getTime = (time) => {\n        return(\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n        );\n    };\n    const dragHandler = (e) => {\n        audioRef.current.currentTime = e.target.value;\n        setSongInfo({ ...songInfo, currentTime: e.target.value});\n    }\n    const skipTrackHandler = (direction) => {\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id)\n        if(direction === 'skip-forward'){\n            setCurrentSong(songs[(currentIndex + 1) % songs.length])\n        }\n        if (direction === 'skip-back') {\n            if((currentIndex -1) % songs.length === -1) {\n                setCurrentSong(songs[songs.length -1]);\n                return;\n            }\n            setCurrentSong(songs[(currentIndex - 1) % songs.length])\n        }\n    }\n    //State\n    const [songInfo, setSongInfo] = useState({\n        currentTime: 0,\n        duration: 0,\n    });\n    //Add the styles\n    const trackAnim = {\n        transform: `translateX(${songInfo.animationPercentage}%)`\n    }\n    return(\n       <div className=\"player\">\n        <div className=\"time-control\">\n            <p>{getTime(songInfo.currentTime)}</p>\n            <div style={{background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`}}className=\"track\">\n            <input min={0} \n            max={songInfo.duration} \n            value={songInfo.currentTime} \n            onChange={dragHandler}\n            type=\"range\"\n            />\n            <div style={trackAnim} className=\"animate-track\"></div>\n            </div>\n            <p>{getTime(songInfo.duration || 0)}</p>\n         </div>   \n         <div className=\"play-control\">\n            <IoIosArrowBack onClick={() => skipTrackHandler('skip-back')} className=\"back\" size=\"2rem\" icon={IoIosArrowBack} />\n            \n            <play onClick={playSongHandler} className=\"play\" icon={isPlaying ? FaPause : FaPlay} />  \n                {isPlaying ? (\n                    <FaPause onClick={playSongHandler} size='2rem' className='play' />\n                ) : ( \n                    <FaPlay onClick={playSongHandler} size='2rem' className='pause' />\n                \n                )}\n            <IoIosArrowForward onClick={() => skipTrackHandler('skip-forward')} className=\"forward\" size='2rem' icon={IoIosArrowForward} /> \n        </div>\n        <audio \n        onLoadedData={autoPlayHandler}\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler} \n        ref={audioRef} \n        src={currentSong.audio}\n        ></audio>\n        </div>\n    );\n};\nexport default Player;","import React from 'react';\n\n const Song = ({ currentSong }) => {\n     return(\n        <div className=\"song-container\">\n            <img alt={currentSong.name} src={currentSong.cover}></img>\n            <h2>{currentSong.name}</h2>\n            <h3>{currentSong.artist}</h3>\n\n        </div>\n     );\n };\n export default Song;","\nimport React from \"react\";\n\nconst LibrarySong = ({ \n  song, \n  songs, \n  setCurrentSong, \n  id, \n  audioRef, \n  isPlaying,\n  setSongs,\n  \n }) => {\n  const songSelectHandler = () => {\n    const selectedSong = songs.filter((state) => state.id === song.id)\n    setCurrentSong(selectedSong[0])\n    //Add active state\n    //Start ACTIVE SONG T/F\n    const newSongs = songs.map((song) => {\n      if (song.id === id) { \n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    })\n    setSongs={isPlaying};\n    return\n    //end ACTIVE SONG T/F (review)\n    // check if song is playing audioRef.current.play();\n    if (isPlaying) {\n      const playPromise = audioRef.current.play();\n      if (playPromise !== undefined) {\n        playPromise.then((audio) => {\n          audioRef.current.play();\n        });\n      }\n    }\n  };\n    return (\n       <div onClick={songSelectHandler} \n            className={`library-song ${song.active ? 'selected' : \"\"}`}>\n           <div className=\"song-description\">\n           <img alt={song.name} src={song.cover}></img>\n             <h3>{song.name}</h3>\n             <h4>{song.artist}</h4> \n           </div>\n       </div>\n    );\n};\nexport default LibrarySong;\n","import React from 'react';\nimport LibrarySong from './LibrarySong';\n\nconst Library = ({ songs, setCurrentSong, audioRef, isPlaying, setSongs,libraryStatus }) => {\n    return (\n       <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\n           <h2>Library</h2>\n           <div className=\"library-songs\">\n               {songs.map((song) => (\n               <LibrarySong \n               songs={songs} \n               setCurrentSong={setCurrentSong} \n               song={song} \n               id={song.id}\n               key={song.id}\n               audioRef={audioRef}\n               isPlaying={isPlaying}\n               setSongs={setSongs}\n               /> \n               ))}\n           </div>              \n       </div>\n    );\n};\nexport default Library;","import React from 'react';\n//font import\nimport { FaMusic } from 'react-icons/fa';\n\nconst Nav = ({ setLibraryStatus,libraryStatus }) => {\n    return(\n        <nav>\n            <h1>WavesBETA</h1>\n            <button onClick={() => setLibraryStatus(!libraryStatus)}>\n                Library\n                <FaMusic class='Music' icon={FaMusic} />\n            </button>\n        </nav>\n    );\n};\nexport default Nav;","import { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    //ADD MORE HERE\n  ];\n}\n\nexport default chillHop;","import React, { useState, useRef } from 'react';\n//Import Styles\nimport \"./styles/app.scss\";\n//Adding components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n//Import Util\nimport data from \"./util\";\n\nfunction App() {\n  //ref\n  const audioRef = useRef(null);\n  //state\n  const [ songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n});\nconst [libraryStatus,setLibraryStatus] = useState(false);\nconst timeUpdateHandler = (e) => {\n  const current = e.target.currentTime;\n  const duration = e.target.duration;\n  //Calculate Percentage\n  const roundedCurrent = Math.round(current);\n  const roundedDuration = Math.round(duration);\n  const animationPercentage = Math.round((roundedCurrent / roundedDuration) * 100);\n  //HERE\n  setSongInfo({...songInfo, currentTime: current, duration });\n};\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player \n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying} \n        isPlaying={isPlaying}\n        currentSong={currentSong} \n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        />\n        <Library \n        audioRef={audioRef}\n        songs={songs} \n        setCurrentSong={setCurrentSong} \n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n        />\n        \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}